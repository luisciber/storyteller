// This file is auto-generated by @hey-api/openapi-ts

import { createClient, createConfig, type Options } from '@hey-api/client-fetch';
import type { HealthCheckApiHealthGetError, HealthCheckApiHealthGetResponse, ListStoriesApiStoriesGetError, ListStoriesApiStoriesGetResponse, CreateStoryEndpointApiStoriesPostData, CreateStoryEndpointApiStoriesPostError, CreateStoryEndpointApiStoriesPostResponse, GetStoryByIdApiStoriesStoryIdGetData, GetStoryByIdApiStoriesStoryIdGetError, GetStoryByIdApiStoriesStoryIdGetResponse, DeleteStoryByIdApiStoriesStoryIdDeleteData, DeleteStoryByIdApiStoriesStoryIdDeleteError, DeleteStoryByIdApiStoriesStoryIdDeleteResponse } from './types.gen';

export const client = createClient(createConfig());

/**
 * Health Check
 */
export const healthCheckApiHealthGet = <ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) => {
    return (options?.client ?? client).get<HealthCheckApiHealthGetResponse, HealthCheckApiHealthGetError, ThrowOnError>({
        ...options,
        url: '/api/health'
    });
};

/**
 * List Stories
 */
export const listStoriesApiStoriesGet = <ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) => {
    return (options?.client ?? client).get<ListStoriesApiStoriesGetResponse, ListStoriesApiStoriesGetError, ThrowOnError>({
        ...options,
        url: '/api/stories/'
    });
};

/**
 * Create Story Endpoint
 */
export const createStoryEndpointApiStoriesPost = <ThrowOnError extends boolean = false>(options: Options<CreateStoryEndpointApiStoriesPostData, ThrowOnError>) => {
    return (options?.client ?? client).post<CreateStoryEndpointApiStoriesPostResponse, CreateStoryEndpointApiStoriesPostError, ThrowOnError>({
        ...options,
        url: '/api/stories/'
    });
};

/**
 * Get Story By Id
 */
export const getStoryByIdApiStoriesStoryIdGet = <ThrowOnError extends boolean = false>(options: Options<GetStoryByIdApiStoriesStoryIdGetData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetStoryByIdApiStoriesStoryIdGetResponse, GetStoryByIdApiStoriesStoryIdGetError, ThrowOnError>({
        ...options,
        url: '/api/stories/{story_id}'
    });
};

/**
 * Delete Story By Id
 */
export const deleteStoryByIdApiStoriesStoryIdDelete = <ThrowOnError extends boolean = false>(options: Options<DeleteStoryByIdApiStoriesStoryIdDeleteData, ThrowOnError>) => {
    return (options?.client ?? client).delete<DeleteStoryByIdApiStoriesStoryIdDeleteResponse, DeleteStoryByIdApiStoriesStoryIdDeleteError, ThrowOnError>({
        ...options,
        url: '/api/stories/{story_id}'
    });
};