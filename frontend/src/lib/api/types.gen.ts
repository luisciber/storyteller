// This file is auto-generated by @hey-api/openapi-ts

export type Chapter = {
    /**
     * El contenido detallado del capítulo
     */
    content: string;
    /**
     *
     * Descripción detallada para la generación de una imagen clave del capítulo,
     * la descripción debe ser en inglés y debe ser lo más detallada posible
     *
     */
    image_description: string;
    /**
     * El ID del capítulo
     */
    id: number;
    /**
     * El título del capítulo
     */
    title: string;
    /**
     * La URL de la imagen del capítulo
     */
    image_url?: (string | null);
    /**
     * La URL del audio del capítulo
     */
    audio_url?: (string | null);
};

export type HTTPValidationError = {
    detail?: Array<ValidationError>;
};

export type HealthCheckResponse = {
    status: string;
};

export type Story = {
    id?: (string | null);
    created_at?: string;
    updated_at?: string;
    title: string;
    image_url: string;
    premise: string;
    chapters: Array<Chapter>;
    preferences: UserPreferences;
};

export type UserPreferences = {
    /**
     * El género literario de la historia
     */
    genre: string;
    /**
     * La longitud deseada de la historia (corta, media, larga)
     */
    length: string;
    /**
     * El estilo de escritura deseado
     */
    style: string;
    /**
     * Lista de temas que deben incluirse en la historia
     */
    themes_to_include: Array<(string)>;
    /**
     * Lista de temas que deben evitarse en la historia
     */
    themes_to_avoid: Array<(string)>;
    /**
     * El estilo artístico deseado para las imágenes
     */
    art_style: string;
};

export type ValidationError = {
    loc: Array<(string | number)>;
    msg: string;
    type: string;
};

export type HealthCheckApiHealthGetResponse = (HealthCheckResponse);

export type HealthCheckApiHealthGetError = unknown;

export type ListStoriesApiStoriesGetResponse = (Array<Story>);

export type ListStoriesApiStoriesGetError = unknown;

export type CreateStoryEndpointApiStoriesPostData = {
    body: UserPreferences;
};

export type CreateStoryEndpointApiStoriesPostResponse = (Story);

export type CreateStoryEndpointApiStoriesPostError = (HTTPValidationError);

export type GetStoryByIdApiStoriesStoryIdGetData = {
    path: {
        story_id: string;
    };
};

export type GetStoryByIdApiStoriesStoryIdGetResponse = (Story);

export type GetStoryByIdApiStoriesStoryIdGetError = (HTTPValidationError);

export type DeleteStoryByIdApiStoriesStoryIdDeleteData = {
    path: {
        story_id: string;
    };
};

export type DeleteStoryByIdApiStoriesStoryIdDeleteResponse = (unknown);

export type DeleteStoryByIdApiStoriesStoryIdDeleteError = (HTTPValidationError);